/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JTextArea;
import javax.swing.Painter;
import javax.swing.UIDefaults;

import model.Livro;
import model.LivroAcervo;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.io.IOException;
import java.net.URL;

/**
 *
 * @author gabriel
 */
public class LivroView extends javax.swing.JPanel {

    private Image background;

    /**
     * Creates new form LivroView
     */
    public LivroView(Livro livro) {
        initComponents();
        overrideLookAndFeel();
        loadBackground();
        loadImage(livro.getPathImagem());
        txtTitulo.setText(livro.getTitulo());
        txtAutor.setText(livro.getAutor());
        txtEditora.setText(livro.getEditora());
        txtDescricao.setText(livro.getDescricao());
        txtDisponibilidade.setText("Selecione uma região para ver disponibilidade");
    }

    public LivroView(LivroAcervo livroAcervo) {
        initComponents();
        overrideLookAndFeel();
        loadBackground();
        loadImage(livroAcervo.getLivro().getPathImagem());
        txtTitulo.setText(livroAcervo.getLivro().getTitulo());
        txtAutor.setText(livroAcervo.getLivro().getAutor());
        txtEditora.setText(livroAcervo.getLivro().getEditora());
        txtDescricao.setText(livroAcervo.getLivro().getDescricao());
        txtDisponibilidade.setText(String.format("%d", livroAcervo.getDisponibilidade()));
    
    }

    private void overrideLookAndFeel(){
        UIDefaults overrides = new UIDefaults();
        overrides.put("TextArea[Disabled].backgroundPainter", new Painter<JTextArea>() {

            @Override
            public void paint(Graphics2D g, JTextArea field, int width, int height) {
                g.setColor(new Color(67, 35, 17, 230));
                g.fill(new Rectangle(
                        0, 
                        0, 
                        width,
                        height));
            }
        });
        txtTitulo.putClientProperty("Nimbus.Overrides", overrides);
        txtAutor.putClientProperty("Nimbus.Overrides", overrides);
        txtEditora.putClientProperty("Nimbus.Overrides", overrides);
        txtDescricao.putClientProperty("Nimbus.Overrides", overrides);
        txtDisponibilidade.putClientProperty("Nimbus.Overrides", overrides);
    }

    private void loadBackground(){
        try {
            this.background = ImageIO.read(new URL(getClass().getResource("/images/livroBackground4.png"), "livroBackground4.png"));
        } catch (IOException e) {
            System.err.println("ERRO: " + e.getMessage());
        }
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (background!= null) {
            // Redimensiona a imagem para cobrir toda a área do painel
            Image scaledImg = background.getScaledInstance(this.getWidth(), this.getHeight(), Image.SCALE_DEFAULT);
            g.drawImage(scaledImg, 0, 0, this);
        }
    }

    private void loadImage(String path){

        int width = 300;
        int height = 420;

        try {
            // Carrega e redimensiona a imagem do livro
            ImageIcon imageIconLivro = new ImageIcon(getClass().getResource(path));
            if (imageIconLivro!= null) {
                Image imageLivro = imageIconLivro.getImage();
                Image scaledImageLivro = imageLivro.getScaledInstance(width, height, Image.SCALE_SMOOTH);
                ImageIcon scaledIconLivro = new ImageIcon(scaledImageLivro);
                lblImage.setIcon(scaledIconLivro);
            }
        } catch (Exception e) {
            System.err.println("Erro na obtencao da imagem: " + e.getMessage());
            lblImage.setText("                                    Image not found");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageBackground = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTitulo = new javax.swing.JTextArea();
        lblTitulo = new javax.swing.JLabel();
        lblAutor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAutor = new javax.swing.JTextArea();
        lblEditora = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtEditora = new javax.swing.JTextArea();
        lblDescricao = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        lblDisponibilidade = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtDisponibilidade = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(67, 35, 17));

        imageBackground.setBackground(new java.awt.Color(204, 141, 72));
        imageBackground.setPreferredSize(new java.awt.Dimension(300, 420));

        javax.swing.GroupLayout imageBackgroundLayout = new javax.swing.GroupLayout(imageBackground);
        imageBackground.setLayout(imageBackgroundLayout);
        imageBackgroundLayout.setHorizontalGroup(
            imageBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        imageBackgroundLayout.setVerticalGroup(
            imageBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );

        txtTitulo.setEditable(false);
        txtTitulo.setColumns(20);
        txtTitulo.setFont(new java.awt.Font("sansserif", 0, 17)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(220, 220, 220));
        txtTitulo.setLineWrap(true);
        txtTitulo.setRows(1);
        txtTitulo.setWrapStyleWord(true);
        txtTitulo.setDisabledTextColor(new java.awt.Color(220, 220, 220));
        txtTitulo.setEnabled(false);
        jScrollPane1.setViewportView(txtTitulo);

        lblTitulo.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(204, 204, 204));
        lblTitulo.setText("Título:");

        lblAutor.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblAutor.setForeground(new java.awt.Color(204, 204, 204));
        lblAutor.setText("Autor:");

        txtAutor.setEditable(false);
        txtAutor.setColumns(20);
        txtAutor.setFont(new java.awt.Font("sansserif", 0, 17)); // NOI18N
        txtAutor.setForeground(new java.awt.Color(220, 220, 220));
        txtAutor.setLineWrap(true);
        txtAutor.setRows(1);
        txtAutor.setWrapStyleWord(true);
        txtAutor.setDisabledTextColor(new java.awt.Color(220, 220, 220));
        txtAutor.setEnabled(false);
        jScrollPane2.setViewportView(txtAutor);

        lblEditora.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblEditora.setForeground(new java.awt.Color(204, 204, 204));
        lblEditora.setText("Editora:");

        txtEditora.setEditable(false);
        txtEditora.setColumns(20);
        txtEditora.setFont(new java.awt.Font("sansserif", 0, 17)); // NOI18N
        txtEditora.setForeground(new java.awt.Color(220, 220, 220));
        txtEditora.setLineWrap(true);
        txtEditora.setRows(1);
        txtEditora.setWrapStyleWord(true);
        txtEditora.setDisabledTextColor(new java.awt.Color(220, 220, 220));
        txtEditora.setEnabled(false);
        jScrollPane3.setViewportView(txtEditora);

        lblDescricao.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblDescricao.setForeground(new java.awt.Color(204, 204, 204));
        lblDescricao.setText("Descrição:");

        txtDescricao.setEditable(false);
        txtDescricao.setColumns(20);
        txtDescricao.setFont(new java.awt.Font("sansserif", 0, 17)); // NOI18N
        txtDescricao.setForeground(new java.awt.Color(220, 220, 220));
        txtDescricao.setLineWrap(true);
        txtDescricao.setRows(1);
        txtDescricao.setWrapStyleWord(true);
        txtDescricao.setDisabledTextColor(new java.awt.Color(220, 220, 220));
        txtDescricao.setEnabled(false);
        jScrollPane4.setViewportView(txtDescricao);

        lblDisponibilidade.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblDisponibilidade.setForeground(new java.awt.Color(204, 204, 204));
        lblDisponibilidade.setText("Disponibilidade:");

        txtDisponibilidade.setEditable(false);
        txtDisponibilidade.setColumns(20);
        txtDisponibilidade.setFont(new java.awt.Font("sansserif", 0, 17)); // NOI18N
        txtDisponibilidade.setForeground(new java.awt.Color(220, 220, 220));
        txtDisponibilidade.setLineWrap(true);
        txtDisponibilidade.setRows(1);
        txtDisponibilidade.setWrapStyleWord(true);
        txtDisponibilidade.setDisabledTextColor(new java.awt.Color(220, 220, 220));
        txtDisponibilidade.setEnabled(false);
        jScrollPane5.setViewportView(txtDisponibilidade);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imageBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescricao)
                                    .addComponent(lblTitulo)
                                    .addComponent(lblDisponibilidade))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAutor)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEditora))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jSeparator1))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEditora)
                            .addComponent(lblAutor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDisponibilidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imageBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel imageBackground;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblDisponibilidade;
    private javax.swing.JLabel lblEditora;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextArea txtAutor;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextArea txtDisponibilidade;
    private javax.swing.JTextArea txtEditora;
    private javax.swing.JTextArea txtTitulo;
    // End of variables declaration//GEN-END:variables
}
